import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

public class Empleados {
    private String numeroEmpleado;
    private String primerNombre;
    private String segundoNombre;
    private String primerApellido;
    private String segundoApellido;
    private String direccion;
    private String categoriaLaboral;
    private double salario;
    private String correoElectronico;
    private LocalDate fechaNacimiento;
    private int edad;
    private Sucursal sucursal;

    public Empleados(String numeroEmpleado, String primerNombre, String segundoNombre,
                    String primerApellido, String segundoApellido, String direccion,
                    String categoriaLaboral, double salario, String correoElectronico,
                    LocalDate fechaNacimiento, Sucursal sucursal) {
        this.numeroEmpleado = numeroEmpleado;
        this.primerNombre = primerNombre;
        this.segundoNombre = segundoNombre;
        this.primerApellido = primerApellido;
        this.segundoApellido = segundoApellido;
        this.direccion = direccion;
        this.categoriaLaboral = categoriaLaboral;
        this.salario = salario;
        this.correoElectronico = correoElectronico;
        this.fechaNacimiento = fechaNacimiento;
        this.sucursal = sucursal;
        this.edad = calcularEdad(fechaNacimiento);
    }

    private int calcularEdad(LocalDate fechaNacimiento) {
        LocalDate today = LocalDate.now();
        int edad = today.getYear() - fechaNacimiento.getYear();
        if (today.getMonthValue() < fechaNacimiento.getMonthValue() ||
                (today.getMonthValue() == fechaNacimiento.getMonthValue() &&
                        today.getDayOfMonth() < fechaNacimiento.getDayOfMonth())) {
            edad--;
        }
        return edad;
    }

    @Override
    public String toString() {
        return "Empleado{" +
                "numeroEmpleado='" + numeroEmpleado + '\'' +
                ", nombre='" + primerNombre + " " + segundoNombre + " " + primerApellido + " " + segundoApellido + '\'' +
                ", direccion='" + direccion + '\'' +
                ", categoriaLaboral='" + categoriaLaboral + '\'' +
                ", salario=" + salario +
                ", correoElectronico='" + correoElectronico + '\'' +
                ", fechaNacimiento=" + fechaNacimiento +
                ", edad=" + edad +
                ", sucursal=" + (sucursal != null ? sucursal.getNombre() : "No asignada") +
                '}';
    }

    // Getters
    public String getNumeroEmpleado() { return numeroEmpleado; }
    public String getCorreoElectronico() { return correoElectronico; }
    public Sucursal getSucursal() { return sucursal; }
}


public class Sucursal {
    private String nombre;

    public Sucursal(String nombre) {
        this.nombre = nombre;
    }

    public String getNombre() {
        return nombre;
    }
}

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Ingrese el número de empleado: ");
        String numeroEmpleado = scanner.nextLine();

        System.out.print("Ingrese el primer nombre: ");
        String primerNombre = scanner.nextLine();

        System.out.print("Ingrese el segundo nombre: ");
        String segundoNombre = scanner.nextLine();

        System.out.print("Ingrese el primer apellido: ");
        String primerApellido = scanner.nextLine();

        System.out.print("Ingrese el segundo apellido: ");
        String segundoApellido = scanner.nextLine();

        System.out.print("Ingrese la dirección: ");
        String direccion = scanner.nextLine();

        System.out.print("Ingrese la categoría laboral: ");
        String categoriaLaboral = scanner.nextLine();

        System.out.print("Ingrese el salario: ");
        double salario = Double.parseDouble(scanner.nextLine());

        System.out.print("Ingrese el correo electrónico: ");
        String correoElectronico = scanner.nextLine();

        LocalDate fechaNacimiento = solicitarFechaNacimiento(scanner);

        System.out.print("Ingrese el nombre de la sucursal: ");
        String nombreSucursal = scanner.nextLine();
        Sucursal sucursal = new Sucursal(nombreSucursal);

        // Crear la instancia de Empleado
        Empleados empleado = new Empleados (numeroEmpleado, primerNombre, segundoNombre, primerApellido,
                segundoApellido, direccion, categoriaLaboral, salario,
                correoElectronico, fechaNacimiento, sucursal);

        // Mostrar la información del empleado
        System.out.println("\nInformación del Empleado:");
        System.out.println(empleado);
    }

    private static LocalDate solicitarFechaNacimiento(Scanner scanner) {
        while (true) {
            try {
                System.out.print("Ingrese la fecha de nacimiento (yyyy-mm-dd): ");
                String fechaStr = scanner.nextLine();
                return LocalDate.parse(fechaStr, DateTimeFormatter.ISO_LOCAL_DATE);
            } catch (DateTimeParseException e) {
                System.out.println("Formato de fecha inválido. Intente nuevamente.");
            }
        }
    }
}
